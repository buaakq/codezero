# -*- mode: python; coding: utf-8; -*-
#
#  Codezero -- Virtualization microkernel for embedded systems.
#
#  Copyright Â© 2009  B Labs Ltd

import os, sys
from os.path import join

# Get global paths
PROJRELROOT = '../../../'
sys.path.append(PROJRELROOT)

from scripts.config.projpaths import *

Import('env', 'type', 'build_dir')

env.Append(CPPPATH = [LIBDEV_INCLUDE, LIBC_INCLUDE, LIBL4_INCLUDE],
           CCFLAGS = ['-DVARIANT_' + type.upper()])

objects     = SConscript('uart/pl011/SConscript',   duplicate=0, exports = { 'env' : env },
                         variant_dir = join(build_dir, 'uart/pl011'))

objects     += SConscript('timer/sp804/SConscript', duplicate=0, exports = { 'env' : env },
                          variant_dir = join(build_dir, 'timer/sp804'))

objects     += SConscript('kmi/pl050/SConscript',   duplicate=0, exports = { 'env' : env },
                          variant_dir = join(build_dir, 'kmi/pl050'))

objects     += SConscript('clcd/pl110/SConscript',  duplicate=0, exports = { 'env' : env },
                          variant_dir = join(build_dir, 'clcd/pl110'))

objects     += SConscript('uart/omap/SConscript',   duplicate=0, exports = { 'env' : env },
                          variant_dir = join(build_dir, 'uart/omap'))

objects     += SConscript('timer/omap/SConscript',  duplicate=0, exports = { 'env' : env },
                          variant_dir = join(build_dir, 'timer/omap'))

library = env.StaticLibrary(join(build_dir, 'libdev-' + type), objects)
Return('library')
